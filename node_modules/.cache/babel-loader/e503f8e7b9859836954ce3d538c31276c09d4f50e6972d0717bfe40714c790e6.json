{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass($options.baseClass)\n  }, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.onClick())\n  }, \" X \")], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$options","baseClass","_renderSlot","_ctx","$slots","undefined","_createElementVNode","onClick","_cache","$event"],"sources":["/home/guilherme/Gearing/src/components/testArea/BaseAlert.vue"],"sourcesContent":["<template>\n    <div :class=\"baseClass\">\n        <slot />\n        <button @click=\"onClick()\">\n            X\n        </button>\n    </div>\n</template>\n<script>\nexport default {\n    props: {\n        variant: {\n            type: String,\n            default: ''\n        }\n    },\n    computed: {\n        baseClass() {\n            return [\n                'alert', this.variant ? `alert-${this.variant}` : ''\n            ]\n        }\n    },\n    methods: {\n        onClick() {\n            this.$emit('close');\n            console.log('click')\n        }\n    }\n  }\n  </script>\n<style scoped>\n.alert {\n    display: flex;\n    justify-content: space-between;\n    padding: 5px;\n    border-radius: 6px;\n    color: red;\n    width: 350px;\n}\n.alert-success {\n    background-color: red;\n    color: white;\n}\n</style>"],"mappings":";;uBACIA,mBAAA,CAKM;IALAC,KAAK,EAAAC,eAAA,CAAEC,QAAA,CAAAC,SAAS;MAClBC,WAAA,CAAQC,IAAA,CAAAC,MAAA,iBAAAC,SAAA,SACRC,mBAAA,CAES;IAFAC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAET,QAAA,CAAAO,OAAO;KAAI,KAE3B,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}