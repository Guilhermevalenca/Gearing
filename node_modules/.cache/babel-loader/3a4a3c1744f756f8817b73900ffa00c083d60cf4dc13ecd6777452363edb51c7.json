{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"verificados:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"nao verificados:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"verificação de analise (ou analisando/verificando):\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"onUpdate:modelValue\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.click())\n  }, \"click\")]), _createElementVNode(\"div\", null, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.compileTodo, users => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: users.id\n    }, _toDisplayString(users.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", null, [_hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.unCompileTodo, users => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: users.id\n    }, _toDisplayString(users.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", null, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.todo, users => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: users.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      \"onUpdate:modelValue\": $event => users.checked = $event\n    }, null, 8 /* PROPS */, _hoisted_4), [[_vModelCheckbox, users.checked]]), _createTextVNode(\" \" + _toDisplayString(users.name), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","onClick","_cache","$event","$options","click","_hoisted_1","_createElementBlock","_Fragment","_renderList","compileTodo","users","key","id","name","_hoisted_2","unCompileTodo","_hoisted_3","$data","todo","type","checked","_toDisplayString"],"sources":["/home/guilherme/Gearing/src/components/ComputedProperties.vue"],"sourcesContent":["<template>\n    <div>\n        <button @click=\"click()\">click</button>\n    </div>\n    <div>\n        <h2>verificados:</h2>\n        <div v-for=\"users in compileTodo\"\n            :key=\"users.id\"\n        >\n            {{ users.name }}\n        </div>\n        <div>\n            <h2>nao verificados:</h2>\n            <div v-for=\"users in unCompileTodo\" :key=\"users.id\">\n                {{ users.name }}\n            </div>\n        </div>\n        <div>\n            <h2>verificação de analise (ou analisando/verificando):</h2>\n            <div v-for=\"users in todo\" :key=\"users.id\">\n                <input type=\"checkbox\" v-model=\"users.checked\"> {{ users.name }}\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n    export default{\n        data() {\n            return {\n                user: {\n                    first_name: 'Guilherme',\n                    last_name: 'Valença'\n                },\n                todo: [\n                    {\n                        'id': 1,\n                        'name': 'Guilherme',\n                        'surName': 'Valença',\n                        'checked': false\n                    },\n                    {\n                        'id': 2,\n                        'name': 'Claudiane',\n                        'surName': 'Rodrigues',\n                        'checked': true\n                    }\n                ]\n            }\n        },\n        computed: {\n           fullName() {\n                return `${this.user.first_name} ${this.user.last_name}`\n            },\n            compileTodo() {\n                return this.todo.filter(todo => todo.checked)\n            },\n            unCompileTodo() {\n                return this.todo.filter(todo => !todo.checked)\n            }\n        },\n        methods: {\n            click() {\n                console.log(this.user)\n            }\n        }\n    }\n</script>"],"mappings":";gCAKQA,mBAAA,CAAqB,YAAjB,cAAY;gCAOZA,mBAAA,CAAyB,YAArB,kBAAgB;gCAMpBA,mBAAA,CAA4D,YAAxD,qDAAmD;;;6DAjB/DA,mBAAA,CAEM,cADFA,mBAAA,CAAuC;IAA9BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,KAAK;KAAI,OAAK,E,GAElCL,mBAAA,CAmBM,cAlBFM,UAAqB,G,kBACrBC,mBAAA,CAIMC,SAAA,QAAAC,WAAA,CAJeL,QAAA,CAAAM,WAAW,EAApBC,KAAK;yBAAjBJ,mBAAA,CAIM;MAHDK,GAAG,EAAED,KAAK,CAACE;wBAETF,KAAK,CAACG,IAAI;kCAEjBd,mBAAA,CAKM,cAJFe,UAAyB,G,kBACzBR,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFeL,QAAA,CAAAY,aAAa,EAAtBL,KAAK;yBAAjBJ,mBAAA,CAEM;MAF+BK,GAAG,EAAED,KAAK,CAACE;wBACzCF,KAAK,CAACG,IAAI;oCAGrBd,mBAAA,CAKM,cAJFiB,UAA4D,G,kBAC5DV,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFeS,KAAA,CAAAC,IAAI,EAAbR,KAAK;yBAAjBJ,mBAAA,CAEM;MAFsBK,GAAG,EAAED,KAAK,CAACE;wBACnCb,mBAAA,CAA+C;MAAxCoB,IAAI,EAAC,UAAU;uCAAUT,KAAK,CAACU,OAAO,GAAAlB;4DAAbQ,KAAK,CAACU,OAAO,E,oBAAE,GAAC,GAAAC,gBAAA,CAAGX,KAAK,CAACG,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}