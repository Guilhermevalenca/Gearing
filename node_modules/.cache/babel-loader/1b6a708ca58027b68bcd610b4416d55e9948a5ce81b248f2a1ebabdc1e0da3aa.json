{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.name]])]), _createTextVNode(\" \" + _toDisplayString(_ctx.name), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","type","_ctx","name","$event","_toDisplayString"],"sources":["/home/guilherme/Gearing/src/components/TestWatch.vue"],"sourcesContent":["<template>\n    <div>\n        <input type=\"text\" v-model=\"name\">\n    </div>\n    {{ name }}\n</template>\n<script>\n    export default{\n        name: 'App',\n        data() {\n            return {\n                name: ''\n            }\n        },\n        watch: {\n            name(newValue, oldValue) {\n                if(){\n                    this.askGetServer(newValue,oldValue)\n                }\n                \n            }  \n        },\n        computed: {\n\n        },\n        methods: {\n            askGetServer(newValue,oldValue) {\n                alert(`nome antigo:${oldValue}, nome novo:${newValue}`)\n            }\n        }\n    }\n</script>"],"mappings":";;6DACIA,mBAAA,CAEM,c,gBADFA,mBAAA,CAAkC;IAA3BC,IAAI,EAAC,MAAM;+DAAUC,IAAA,CAAAC,IAAI,GAAAC,MAAA;iDAAJF,IAAA,CAAAC,IAAI,E,sBAC9B,GACN,GAAAE,gBAAA,CAAGH,IAAA,CAAAC,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}